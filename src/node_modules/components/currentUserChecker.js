import React, { useContext, useEffect } from 'react';

import useFetch from 'hooks/useFetch';
import {CurrentUserContext} from 'contexts/currentUser';
import useLocalStorage from 'hooks/useLogalStorage';

const CurrentuserChecker = ({children}) => {
    const [{response}, doFetch] = useFetch('/user');
    const [, setCurrentUserState] = useContext(CurrentUserContext);
    const [token] = useLocalStorage('token');

    useEffect(() => {
        if (!token) {
            setCurrentUserState(state => ({
                ...state,
                isLoadingIn: false
            }))
            return
        }
        doFetch();
        console.log('init');
        setCurrentUserState(state => ({
            ...state,
            isLoading: true
        }))
    }, [])

    useEffect(() => {
    if (!response) {
        return
    }
    setCurrentUserState(state => ({
        ...state,
        isLoadingIn: true,
        isLoading: false,
        currentUser: response.user
    }))

    }, [response, setCurrentUserState])

    return children
}

export default CurrentuserChecker;