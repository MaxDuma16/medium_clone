import {useState, useEffect, useCallback} from 'react';
import axios from 'axios';

import useLocalStorage from 'hooks/useLogalStorage';

export default url => {
    const baseUrl = 'http://localhost:3000';
    const [isLoading, setIsLoading] = useState(false);
    const [response, setResponce] = useState(null);
    const [error, setError] = useState(null);
    const [options, setOptions] = useState({});
    const [token] = useLocalStorage('token');

 const doFetch = useCallback((options = {}) => {
     setOptions(options);
     setIsLoading(true);
 }, []);

 useEffect(() => {
     const requestOptions = {
         ...options,
         ...{
                headers: {
                    authorization: token ? `Token ${token}` : ''
                }
            }
     }
    if (!isLoading) {
        return
    }
    axios(baseUrl + url, requestOptions)
    .then(res => {
        console.log('success', res);
        setIsLoading(false);
        setResponce(res.data)
    }).catch(err => {
        console.log('error', err);
        setIsLoading(false);
        setError(error.response.data)
    })
}, [isLoading, options, url, token])

 return [{isLoading, response, error}, doFetch]

}